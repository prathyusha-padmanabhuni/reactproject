{"version":3,"sources":["component/card.js","component/Resume.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Cards","cardsData","data","details","console","log","images","logo","logo1","className","map","values","index","key","src","card","name","href","email","mobile","description","career","to","pathname","personcard","id","Resume","props","profile","location","class","educationalqualification","institute","degree","passoutyear","percentage","technicaldetails","title","info","App","exact","path","component","React","Component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"0SAuCeA,EAlCL,WACN,IAAIC,EAAUC,EAAKC,QACnBC,QAAQC,IAAIJ,GACZ,IAAIK,EAAO,CAACC,IAAKC,KACjB,OACI,6BACQ,wBAAIC,UAAU,gBAAd,SACA,yBAAKA,UAAU,OAEdR,EAAUS,KAAI,SAACC,EAAOC,GAAR,OAGX,yBAAKH,UAAU,8BAA8BI,IAAKD,GAChD,yBAAKH,UAAU,SACb,yBAAKK,IAAKR,EAAOM,KACjB,4BAAKD,EAAOI,KAAKC,MACjB,uBAAIC,KAAM,UAAUN,EAAOI,KAAKG,QAChC,4BAAKP,EAAOI,KAAKI,QACjB,2BAAIR,EAAOI,KAAKK,aAChB,2BAAIT,EAAOU,QACX,kBAAC,IAAD,CAAMC,GAAI,CAACC,SAAS,UAAUC,WAAW,CAACC,GAAGb,IAASH,UAAU,gBAAhE,oB,OCsDTiB,MA5Ef,SAAgBC,GACZ,IAAIC,EAAQ1B,EAAKC,QAAQwB,EAAME,SAASL,WAAWC,IAEnD,OADArB,QAAQC,IAAIuB,GAEZ,6BACI,yBAAKnB,UAAU,OACX,yBAAKA,UAAU,2CACX,yBAAKA,UAAU,qBACX,yBAAKK,IAAKP,MACV,6BACA,4BAAKqB,EAAQb,KAAKC,MAClB,6BACA,uBAAGC,KAAM,UAAUW,EAAQb,KAAKG,OAAO,4BAAKU,EAAQb,KAAKG,QACzD,6BACA,4BAAKU,EAAQb,KAAKI,QAClB,6BACA,4BAAKS,EAAQP,QACb,+BAQR,yBAAKZ,UAAU,sCACX,6BACA,yDACC,yBAAKqB,MAAM,aACR,2BAASA,MAAM,sCAEX,4BACG,yCACA,sCACA,4CACA,2CAEH,4BACI,4BAAKF,EAAQG,yBAAyB,GAAGC,WACzC,gCAAMJ,EAAQG,yBAAyB,GAAGE,QAC1C,4BAAKL,EAAQG,yBAAyB,GAAGG,aACzC,4BAAKN,EAAQG,yBAAyB,GAAGI,aAE7C,4BACI,4BAAKP,EAAQG,yBAAyB,GAAGC,WACzC,gCAAMJ,EAAQG,yBAAyB,GAAGE,QAC1C,4BAAKL,EAAQG,yBAAyB,GAAGG,aACzC,4BAAKN,EAAQG,yBAAyB,GAAGI,aAG5C,4BACG,4BAAKP,EAAQG,yBAAyB,GAAGC,WACzC,gCAAMJ,EAAQG,yBAAyB,GAAGE,QAC1C,4BAAKL,EAAQG,yBAAyB,GAAGG,aACzC,4BAAKN,EAAQG,yBAAyB,GAAGI,eAIrD,iDACA,4BAAKP,EAAQQ,iBAAiB,GAAGC,OAC5B,4BAAKT,EAAQQ,iBAAiB,GAAGE,MACtC,6BACA,4BAAKV,EAAQQ,iBAAiB,GAAGC,OAC5B,4BAAKT,EAAQQ,iBAAiB,GAAGE,MACtC,6BACA,4BAAKV,EAAQQ,iBAAiB,GAAGC,OAC5B,4BAAKT,EAAQQ,iBAAiB,GAAGE,UCyCtCC,E,uKAbZ,OACG,yBACG9B,UAAU,OACR,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO+B,OAAK,EAACC,KAAK,IAAIC,UAAW1C,IACjC,kBAAC,IAAD,CAAOwC,OAAK,EAACC,KAAK,UAAUC,UAAWhB,U,GAPrCiB,IAAMC,WCnFJC,QACW,cAA7BC,OAAOjB,SAASkB,UAEe,UAA7BD,OAAOjB,SAASkB,UAEhBD,OAAOjB,SAASkB,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLzD,QAAQyD,MAAMA,EAAMC,a,kBEzI5BC,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.08291f41.chunk.js","sourcesContent":["import React from 'react';\r\nimport data  from '../data.json';\r\nimport logo from '../logo.svg';\r\n import logo1 from '../logo.svg';\r\nimport {Link} from 'react-router-dom';\r\nlet Cards=()=>{\r\n    let cardsData=data.details;\r\n    console.log(cardsData);\r\n    let images=[logo,logo1];\r\n    return(\r\n        <div>            \r\n                <h1 className=\"text-primary\" >cards</h1>\r\n                <div className=\"row\">\r\n                    {\r\n                 cardsData.map((values,index)=>\r\n                 (\r\n                    \r\n                    <div className=\"col-sm-10 col-md-4 col-lg-4\" key={index}>\r\n                      <div className=\"card \">\r\n                        <img src={images[index]}/>\r\n                        <h1>{values.card.name}</h1>\r\n                        <a  href={\"mailto:\"+values.card.email}></a>\r\n                        <h4>{values.card.mobile}</h4>\r\n                        <p>{values.card.description}</p>\r\n                        <p>{values.career}</p>\r\n                        <Link to={{pathname:\"/resume\",personcard:{id:index}}} className=\"btn btn-info\">click me</Link> \r\n                      </div>\r\n\r\n                    </div>\r\n                   \r\n                 ))}\r\n                 </div>\r\n            \r\n             \r\n            \r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Cards;","import React from 'react';\r\nimport data from \"../data.json\";\r\nimport logo from '../logo.svg';\r\nfunction Resume(props){\r\n    let profile=data.details[props.location.personcard.id];\r\n    console.log(profile);\r\n    return(\r\n    <div>\r\n        <div className=\"row\">\r\n            <div className=\"col-sm-4 col-md-4 col-lg-4 bg-secondary\">\r\n                <div className=\"card bg-secondary\">\r\n                    <img src={logo}></img>\r\n                    <br></br>\r\n                    <h1>{profile.card.name}</h1>\r\n                    <br></br>\r\n                    <a href={\"mailto:\"+profile.card.email}><h3>{profile.card.email}</h3></a>\r\n                    <br></br>\r\n                    <h4>{profile.card.mobile}</h4>\r\n                    <br></br>\r\n                    <h3>{profile.career}</h3>\r\n                    <br></br>\r\n                    \r\n                </div>\r\n   \r\n            </div>\r\n          \r\n                 \r\n                     \r\n            <div className=\"col-sm-8 col-md-8 col-lg-8 bg-info\" >\r\n                <br></br>\r\n                <h2>educational qualification</h2>\r\n                 <div class=\"container\">\r\n                    <table   class=\"table table-striped table-bordered\">\r\n                       \r\n                        <tr> \r\n                           <th>institute</th> \r\n                           <th>degree</th> \r\n                           <th>passout year</th> \r\n                           <th>percentage</th> \r\n                        </tr>\r\n                        <tr> \r\n                            <td>{profile.educationalqualification[0].institute}</td>\r\n                            <td> {profile.educationalqualification[0].degree}</td>\r\n                            <td>{profile.educationalqualification[0].passoutyear}</td>\r\n                            <td>{profile.educationalqualification[0].percentage}</td>\r\n                        </tr>\r\n                        <tr> \r\n                            <td>{profile.educationalqualification[1].institute}</td>\r\n                            <td> {profile.educationalqualification[1].degree}</td>\r\n                            <td>{profile.educationalqualification[1].passoutyear}</td>\r\n                            <td>{profile.educationalqualification[1].percentage}</td>\r\n                            \r\n                        </tr>\r\n                         <tr> \r\n                            <td>{profile.educationalqualification[2].institute}</td>\r\n                            <td> {profile.educationalqualification[2].degree}</td>\r\n                            <td>{profile.educationalqualification[2].passoutyear}</td>\r\n                            <td>{profile.educationalqualification[2].percentage}</td>\r\n                         </tr>\r\n                </table>\r\n                </div>  \r\n                <h2>technical details</h2>  \r\n                <dt>{profile.technicaldetails[0].title}</dt>\r\n                     <dd>{profile.technicaldetails[0].info}</dd>\r\n                <br></br>\r\n                <dt>{profile.technicaldetails[1].title}</dt>\r\n                     <dd>{profile.technicaldetails[1].info}</dd>\r\n                <br></br>\r\n                <dt>{profile.technicaldetails[2].title}</dt>\r\n                     <dd>{profile.technicaldetails[2].info}</dd>\r\n\r\n            </div>\r\n                     \r\n                \r\n        </div>  \r\n    </div> \r\n        \r\n    );\r\n}\r\nexport default Resume;","import React from 'react';\n//import ReactDom from'react-dom';\nimport './App.css';\n// import Prathyu from './prathyu.js';\nimport Cards from './component/card.js';\nimport {BrowserRouter,Route} from 'react-router-dom';\nimport Resume from './component/Resume.js';\n\n\n\n // import logo from './logo.svg';\n// import './App.css';\n// import Header from './header.js';\n// import Header1 from './header1.js';\n// //import StateCom from './stateCom.js';\n \n//function App() {\n  //return React.createElement('h2',{style:{color:\"red\"}},'surya'\n      \n    // <div class=\"APP\">\n    //     <h1>my react app</h1>\n    //     <p>prathyusha</p>\n    //     <Header></Header>\n    //     <Header1></Header1>\n    //    {/* <StateCom></StateCom>  */}\n    //     <head></head>\n    //     <h2>this is second heading</h2>\n    //     <h1>prathyusha</h1>\n    //     <h3>{4+5}</h3>\n    // </div>\n    // /*<div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.js</code> and save to reload.\n    //     </p>\n    //     <a\n    //       className=\"App-link\"\n    //       href=\"https://reactjs.org\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       Learn React\n    //     </a>\n    //   </header>\n    // </div>*/\n\n // );\n//}\n// class App extends React.Component{\n//   render(){\n//       return (\n//        // React.createElement('div',{id:'hai'},React.createElement('h2',null,React.createElement('p',null,'venky')))\n//         //React.createElement('div',{id:'hai'},React.createElement('h2',null,'venkat'))\n//         //React.createElement('div',{style:{background:'yellow'}},React.createElement('h2',null,'venkat'))\n//       );\n//   }\n// } \n\n\n// function App()\n// {\n//   const x=(\n//     <div>\n//       <p>hai evary one</p>\n//       <h4>how r u</h4>\n//     </div>\n//   );\n//   return(ReactDom.render(x,document.getElementById('root')))\n\n //}\n\n  \n//  class App extends React.Component{\n//    render(){\n//      return(\n//        <div>\n//          <Prathyu name=\"prathyu\" role=\"developer\"></Prathyu>\n//          <Prathyu name=\"sindhu\" role=\"good learner\"></Prathyu>\n//        </div>\n//      )\n//    }\n//  }\n\n\n\n// class App extends React.Component{\n//   render(){\n//     return(\n//        <div>\n//          <Prathyu></Prathyu>\n//        </div>\n//     );\n//   }\n// }\nclass App extends React.Component{\n  render(){\n    return(\n       <div\n          className=\"App\">\n            <BrowserRouter>\n                <Route exact path=\"/\" component={Cards}/>\n                <Route exact path=\"/resume\" component={Resume}/>\n            </BrowserRouter>\n            {/* <Cards/> */}\n       </div>\n    );\n  }\n}\n\n export default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}